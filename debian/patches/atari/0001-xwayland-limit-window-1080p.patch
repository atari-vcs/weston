From: Christopher Obbard <chris.obbard@collabora.com>
Date: Thu, 7 Oct 2021 10:18:08 +0100
Subject: [HACK] xwayland: Limit windows to a maximum size of 1920x1080

Forwarded: not-needed

xwayland will scale up windows which are set to 1080p to the display's
full resolution, so resize all windows to this size.

Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
---
 xwayland/window-manager.c | 65 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 65 insertions(+)

diff --git a/xwayland/window-manager.c b/xwayland/window-manager.c
index 0443817..111f0c4 100644
--- a/xwayland/window-manager.c
+++ b/xwayland/window-manager.c
@@ -50,6 +50,10 @@
 #include "hash.h"
 #include "shared/helpers.h"
 
+/* HACK: Limit windows to this maximum resolution. */
+#define MAX_SCALED_WIDTH  1920
+#define MAX_SCALED_HEIGHT 1080
+
 struct wm_size_hints {
 	uint32_t flags;
 	int32_t x, y;
@@ -708,6 +712,27 @@ weston_wm_window_get_child_position(struct weston_wm_window *window,
 	}
 }
 
+static bool
+limit_window_size(struct weston_wm_window *window,
+				  int *width, int *height)
+{
+	if (window) {
+		wm_printf(window->wm, "XWM: limit_window_size (window id=%d, name=%s, class=%s) %dx%d\n",
+			window->id,
+			window->name,
+			window->class,
+			window->width,
+			window->height);
+	}
+
+	if (*width > MAX_SCALED_WIDTH)
+		*width = MAX_SCALED_WIDTH;
+	if (*height > MAX_SCALED_HEIGHT)
+		*height = MAX_SCALED_HEIGHT;
+
+	return true;
+}
+
 static void
 weston_wm_window_send_configure_notify(struct weston_wm_window *window)
 {
@@ -716,6 +741,10 @@ weston_wm_window_send_configure_notify(struct weston_wm_window *window)
 	int x, y;
 
 	weston_wm_window_get_child_position(window, &x, &y);
+
+	/* HACK: Limit the window size */
+	limit_window_size(window, &window->width, &window->height);
+
 	configure_notify.response_type = XCB_CONFIGURE_NOTIFY;
 	configure_notify.pad0 = 0;
 	configure_notify.event = window->id;
@@ -821,6 +850,9 @@ weston_wm_handle_configure_request(struct weston_wm *wm, xcb_generic_event_t *ev
 	if (configure_request->value_mask & XCB_CONFIG_WINDOW_HEIGHT)
 		window->height = configure_request->height;
 
+	/* HACK: Limit the window size */
+	limit_window_size(window, &window->width, &window->height);
+
 	if (window->frame) {
 		weston_wm_window_set_allow_commits(window, false);
 		frame_resize_inside(window->frame, window->width, window->height);
@@ -867,6 +899,7 @@ weston_wm_handle_configure_notify(struct weston_wm *wm, xcb_generic_event_t *eve
 	const struct weston_desktop_xwayland_interface *xwayland_api =
 		wm->server->compositor->xwayland_interface;
 	struct weston_wm_window *window;
+	int width, height;
 
 	wm_printf(wm, "XCB_CONFIGURE_NOTIFY (window %d) %d,%d @ %dx%d%s\n",
 		  configure_notify->window,
@@ -877,6 +910,13 @@ weston_wm_handle_configure_notify(struct weston_wm *wm, xcb_generic_event_t *eve
 	if (!wm_lookup_window(wm, configure_notify->window, &window))
 		return;
 
+	/* HACK: Limit the window size */
+	width = configure_notify->width;
+	height = configure_notify->height;
+	limit_window_size(window, &width, &height);
+	configure_notify->width = width;
+	configure_notify->height = height;
+
 	window->x = configure_notify->x;
 	window->y = configure_notify->y;
 	window->pos_dirty = false;
@@ -884,6 +924,7 @@ weston_wm_handle_configure_notify(struct weston_wm *wm, xcb_generic_event_t *eve
 	if (window->override_redirect) {
 		window->width = configure_notify->width;
 		window->height = configure_notify->height;
+
 		if (window->frame)
 			frame_resize_inside(window->frame,
 					    window->width, window->height);
@@ -1585,6 +1626,7 @@ weston_wm_handle_create_notify(struct weston_wm *wm, xcb_generic_event_t *event)
 {
 	xcb_create_notify_event_t *create_notify =
 		(xcb_create_notify_event_t *) event;
+	int width, height;
 
 	wm_printf(wm, "XCB_CREATE_NOTIFY (window %d, at (%d, %d), width %d, height %d%s%s)\n",
 		  create_notify->window,
@@ -1596,6 +1638,13 @@ weston_wm_handle_create_notify(struct weston_wm *wm, xcb_generic_event_t *event)
 	if (our_resource(wm, create_notify->window))
 		return;
 
+	/* HACK: Limit the window size */
+	width = create_notify->width;
+	height = create_notify->height;
+	limit_window_size(NULL, &width, &height);
+	create_notify->width = width;
+	create_notify->height = height;
+
 	weston_wm_window_create(wm, create_notify->window,
 				create_notify->width, create_notify->height,
 				create_notify->x, create_notify->y,
@@ -1768,6 +1817,10 @@ weston_wm_window_set_toplevel(struct weston_wm_window *window)
 	xwayland_interface->set_toplevel(window->shsurf);
 	window->width = window->saved_width;
 	window->height = window->saved_height;
+
+	/* HACK: Limit the window size */
+	limit_window_size(window, &window->width, &window->height);
+
 	if (window->frame)
 		frame_resize_inside(window->frame,
 					window->width,
@@ -2776,6 +2829,9 @@ send_configure(struct weston_surface *surface, int32_t width, int32_t height)
 	wm = window->wm;
 	t = wm->theme;
 
+	/* HACK: Limit the window size */
+	limit_window_size(window, &width, &height);
+
 	if (window->decorate && !window->fullscreen) {
 		hborder = 2 * t->width;
 		vborder = t->titlebar_height + t->width;
@@ -2856,6 +2912,15 @@ legacy_fullscreen(struct weston_wm *wm,
 	/* Heuristics for detecting legacy fullscreen windows... */
 
 	wl_list_for_each(output, &compositor->output_list, link) {
+
+		/* HACK: Find resized 1080p windows and consider those to be fullscreen */
+		if (limit_window_size(window, &window->width, &window->height) &&
+				(window->width == MAX_SCALED_WIDTH &&
+				 window->height == MAX_SCALED_HEIGHT)) {
+			*output_ret = output;
+			return 1;
+		}
+
 		if (output->x == window->x &&
 		    output->y == window->y &&
 		    output->width == window->width &&
